<!DOCTYPE html>
<html>
<head>
<title>PacketParser Interface</title>
    <meta name="author" content="David R. Hedges" />
    <meta name="generator" content="p14nd4.com" />
    <script type="text/javascript">

        //graciously taken from http://www.captain.at/howto-ajax-process-xml.php
        //and modified for our needs
        var http_request = false;
        var sortCol = -1;
        var rowStart = 0;
        var rowEnd = 3;
        var diff = rowEnd - rowStart;

        function makeRequest(url, parameters) {
            http_request = false;
            if (window.XMLHttpRequest) { // Mozilla, Safari,...
                http_request = new XMLHttpRequest();
                if (http_request.overrideMimeType) {
                    http_request.overrideMimeType('text/xml');
                }
            } else if (window.ActiveXObject) { // IE
                try {
                    http_request = new ActiveXObject("Msxml2.XMLHTTP");
                } catch (e) {
                    try {
                        http_request = new ActiveXObject("Microsoft.XMLHTTP");
                    } catch (e) { }
                }
            }
            if (!http_request) {
                alert('Cannot create XMLHTTP instance');
                return false;
            }
            http_request.onreadystatechange = printStats;
            http_request.open('GET', url + parameters, true);
            http_request.send(null);
        }

        function printStats() {
            if (http_request.readyState == 4) {
                if (http_request.status == 200) {

                    var xmldoc = http_request.responseXML;
                    var statsTable = document.getElementById('statsbody');
                    var packets = xmldoc.getElementsByTagName('stats').item(0).childNodes;
                    //alert('length: ' + packets.length);
                    for (var i = 0 ; i < packets.length ; i++)
                    {
                        var packet = packets.item(i);
                        if (packet.nodeType != 1)
                            continue;
                        var attributes = packet.attributes;
                        //alert('type: ' + attributes.getNamedItem("type").value);
                        statsTable.insertAdjacentHTML('beforeend', "<tr><td>" + attributes.getNamedItem("type").value + "</td>\n<td>" + attributes.getNamedItem("count").value + "</td>\n</tr>");
                    }
                    var allRows = document.getElementById('allRows');
                    var rowNums = document.getElementById('rowNums');
                    if (rowStart == -1 && rowEnd == -1)
                    {
                        allRows.style.display = "inline";
                        rowNums.style.display = "none";
                    }
                    else
                    {
                        allRows.style.display = "none";
                        rowNums.style.display = "inline";
                        document.getElementById('rowStart').innerText = rowStart;
                        document.getElementById('rowEnd').innerText = rowEnd;
                    }
                } else {
                    alert('There was a problem with the request.');
                }
            }
        }
        //end code taken from http://www.captain.at/howto-ajax-process-xml.php

        function sortTable(colNumber)
        {
            var statsbody = document.getElementById('statsbody');
            var rows = statsbody.getElementsByTagName('tr');
            //rows.sort(function (a, b) { return a.cells[colNumber].textContent - b.cells[colNumber].textContent })
            var rowsToSort = [];
            for (var i = 0 ; i < rows.length ; i++)
            {
                rowsToSort.push([rows[i].cells[colNumber].textContent, rows[i].cloneNode(true)]);
            }
            if (colNumber == sortCol)
            {
                    rowsToSort.reverse();
            }
            else
                rowsToSort.sort(function (a, b) { return parseInt(a[0], 16) - parseInt(b[0], 16) });

            statsbody.innerHTML = '';
            for (var i = 0 ; i < rowsToSort.length ; i++)
            {
                statsbody.appendChild(rowsToSort[i][1]);
            }
            sortCol = colNumber;

        }

        function getNextRows(forward)
        {
            document.getElementById('statsbody').innerHTML = "";
            if (forward>0)
            {
                rowStart = rowEnd + 1;
                rowEnd += (diff + 1);
            }
            else if (forward < 0)
            {
                if (rowStart - (diff + 1) >= 0)
                {
                    rowEnd = rowStart - 1;
                    rowStart -= (diff + 1);
                }
            }
            else
            {
                //all
                rowEnd = -1;
                rowStart = -1;
            }
            makeRequest('/parser/PacketParser.exe', '?rowStart=' + rowStart + '&rowEnd=' + rowEnd)
        }

        window.onload = makeRequest('/parser/PacketParser.exe', '?rowStart=' + rowStart + '&rowEnd=' + rowEnd)
    </script>
</head>
<body>
    <h1>Packet statistics</h1>
    <p><a href="#" onclick="getNextRows(-1)">&laquo; Previous</a> - <a href="#" onclick="getNextRows(0);">All</a> - <a href="#" onclick="getNextRows(1)">Next &raquo;</a></p>
    <p id="allRows" style="display: none;">Displaying stats for all rows in file.</p>
    <p id="rowNums">Displaying stats for rows <span id="rowStart">0</span> - <span id="rowEnd">0</span></p>
    <p style="font-size: smaller;">Click column headings to sort</p>
    <table id="stats">
        <thead>
            <tr>
                <td onclick="sortTable(0);">Packet Type</td>
                <td onclick="sortTable(1);">Count</td>
            </tr>
        </thead>
        <tbody id="statsbody"></tbody>
    </table>


</body>
</html>
